function [wl,cps] = import_fluor(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [WAVELENGTHNM,VARNAME2] = IMPORTFILE(FILENAME) Reads data from text
%   file FILENAME for the default selection.
%
%   [WAVELENGTHNM,VARNAME2] = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads
%   data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   [Wavelengthnm,VarName2] = importfile('PTACE15.csv',2, 432);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2013/07/05 16:48:13

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Open the text file.
fileID = fopen(filename,'r');

%% Figure out how many spectra are contained in this file

firstline = textscan(fileID, '%s',1,'delimiter','\n');
frewind(fileID);
nexpts = regexpi(firstline{1},'Expt\s+(\d+),*\s*$','tokens');

if (isempty(nexpts{1}))
    nexpts = 1;
else
    nexpts = str2double(nexpts{1}{1});
    startRow = 3;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%[^\n\r]';
for i = 1:nexpts
    formatSpec = ['%f%f' formatSpec];
end

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
wl = zeros(length(dataArray{1}),nexpts);
cps = zeros(length(dataArray{1}),nexpts);
for i = 1:nexpts
    wl(:,i) = dataArray{2*i-1};
    cps(:,i) = dataArray{2*i};
end

